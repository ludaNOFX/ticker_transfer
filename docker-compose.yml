#services:
#  db:
#    image: postgres:latest
#    container_name: postgres_container
#    environment:
#      - POSTGRES_USER=${DATABASE_USER}
#      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
#      - POSTGRES_DB=${DATABASE_NAME}
#      - POSTGRES_SERVER=${POSTGRES_SERVER}
#    ports:
#      - "5432:5432"
#    networks:
#      - mynetwork
#    volumes:
#      - postgres_data:/var/lib/postgresql/data  # Хранение данных PostgreSQL
#
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: app_container
#    env_file:
#      - .env  # Загружает переменные окружения из .env файла
#    depends_on:
#      - db  # Зависимость от контейнера PostgreSQL
#    networks:
#      - mynetwork
#    ports:
#      - "8002:8002"

#networks:
#  mynetwork:
#
#volumes:
#  postgres_data:


#version: '3.9'
#
#services:
#  postgres:
#    image: postgres:latest
#    container_name: postgres
#    environment:
#      - POSTGRES_USER=${DB_USER}
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#      - POSTGRES_DB=${DATABASE_NAME}
##      PGDATA: /var/lib/postgresql/data/pgdata
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./pgdata:/var/lib/postgresql/data/pgdata
#    deploy:
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 512M
#        reservations:
#          cpus: '0.25'
#          memory: 256M
#    command: >
#      postgres -c max_connections=1000
#               -c shared_buffers=256MB
#               -c effective_cache_size=768MB
#               -c maintenance_work_mem=64MB
#               -c checkpoint_completion_target=0.7
#               -c wal_buffers=16MB
#               -c default_statistics_target=100
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#    restart: unless-stopped
#    tty: true
#    stdin_open: true
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: app_container
#    env_file:
#      - .env  # Загружает переменные окружения из .env файла
#    depends_on:
#      - postgres  # Зависимость от контейнера PostgreSQL
#    ports:
#      - "8002:8002"
#
#volumes:
#  pgdata:
#    driver: local


version: "3"
services:

  db:
    image: postgres:14.3
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - $HOME/docker/volumes/postgres/breads:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_SERVER=${POSTGRES_SERVER}

  app:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: app
    restart: always
    depends_on:
      - db
    ports:
      - "8002:8002"
    volumes:
      - $HOME/docker/volumes/breads:/var/lib



